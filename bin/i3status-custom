#!/usr/bin/env bash
COLOR_GRAY="#a7adba"
COLOR_GREEN="#1db951"
COLOR_RED="#bf616a"
COLOR_BLUE="#8fa1b3"

get-playing() {
  spotify-ctrl currently-playing 2>/dev/null | tr -s '´' "'" | tr -s '"' "'"
}
get-spotify-json() {
  local state color
  ARTIST_TITLE=" $(get-playing)"

  state="$(spotify-ctrl state 2>/dev/null)"
  case "$state" in
    "Playing") color="$COLOR_GREEN" ;;
    *)         color="$COLOR_GRAY" ;;
  esac

  echo "{ name: \"spotify\", markup: \"none\", color: \"${color}\", full_text: \"${ARTIST_TITLE}\" }"
}
get-backlight-json() {
  local state
  state="  $(light | xargs printf '%.f')%"
  echo "{ name: \"backlight\", markup: \"none\", color: \"${COLOR_GRAY}\", full_text: \"${state}\" }"
}
get-temp-json() {
  local state color text
  color="$COLOR_GRAY"
  state="$(cat /tmp/.room-temp)"
  text=" ${state}"
  if (( $(echo "${state: :-2} < 18" | bc -l) )); then
    color="$COLOR_BLUE"
  fi
  if (( $(echo "${state: :-2} > 22" | bc -l) )); then
    color="$COLOR_RED"
  fi
  echo "{ name: \"temp\", markup: \"none\", color: \"${color}\", full_text: \"${text}\" }"
}
get-co2-json() {
  local state color text
  state="$(cat /tmp/.room-co2)"
  color="$COLOR_GRAY"
  text="  ${state}"
  if (( $(echo "${state} > 800" | bc -l) )); then
    color="$COLOR_RED"
  fi
  echo "{ name: \"co2\", markup: \"none\", color: \"${color}\", full_text: \"${text}\" }"
}
get-door-json() {
  local state color text
  state="$(cat /tmp/.room-door)"
  text=""
  color="$COLOR_GREEN"
  if [[ "$state" == "l" ]]; then
    text=""
    color="$COLOR_RED"
  fi
  echo "{ name: \"door\", markup: \"none\", color: \"${color}\", full_text: \"${text}\" }"
}

i3status-switch | while :
do
  read -r line
  prefix=''
  if [[ "$line" == ","* ]]; then
    line="${line:1}"
    prefix=','
  fi
  if [[ "$line" == "[{"* ]]; then
    json="[$(get-spotify-json),$(get-door-json),$(get-temp-json),$(get-co2-json),$(get-backlight-json)]"
    out=$(echo "$line" | jq -c ". |= ${json} + .")
    echo "${prefix}${out}"
  else
    echo "${prefix}${line}" || exit 1
  fi
done

